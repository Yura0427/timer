{"version":3,"sources":["assets/img/pause.svg","assets/img/play.svg","Components/Timer.jsx","redux/reducer.js","assets/img/remove.svg","Components/App.jsx","reportWebVitals.js","redux/store.js","index.js","Components/App.module.css","Components/Timer.module.css"],"names":["Timer","props","useState","isActive","setIsActive","timer","timeStart","timerOn","setTimerOn","time","setTime","useEffect","interval","moment","valueOf","currentTime","setInterval","setTrackers","trackers","map","t","id","trackName","clearInterval","className","style","timeBlock","cn","active","display","flexDirection","alignItems","marginLeft","Math","floor","slice","btn","onClick","src","pause","imgPause","play","SET_NAME","initialState","name","startAt","reducer","state","action","type","payload","connect","setName","presEnter","e","code","start","toString","JSON","parse","localStorage","getItem","setItem","stringify","document","addEventListener","removeEventListener","removeTimer","filter","track","target","divPlay","value","onInput","inputPlay","placeholder","btnPlay","imgPlay","length","p","timerGrup","remove","imgRemove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whitelist","reducers","combineReducers","store","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6f86d2d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.7a13eaea.svg\";","export default __webpack_public_path__ + \"static/media/play.9a7adb4d.svg\";","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport style from './Timer.module.css'\r\nimport pause from '../assets/img/pause.svg'\r\nimport play from '../assets/img/play.svg'\r\nimport cn from 'classnames'\r\n\r\nconst Timer = (props) => {\r\n    const [isActive, setIsActive] = useState(true)\r\n    const [timerOn, setTimerOn] = useState(props.timer.timeStart);\r\n    const [time, setTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setIsActive(timerOn)\r\n        let interval = null;\r\n        if (timerOn) {\r\n            let timeStart = props.timer.timeStart ||\r\n                (moment().valueOf() - props.timer.currentTime)\r\n            interval = setInterval(() => {\r\n                if (props.timer.timeStart) {\r\n                    setTime(moment().valueOf() - timeStart)\r\n                }\r\n                if (props.timer.currentTime) {\r\n                    setTime(moment().valueOf() - timeStart)\r\n                    props.setTrackers(props.trackers.map(t => {\r\n                        if (props.timer.id == t.id) return { id: t.id, trackName: t.trackName, timeStart }\r\n                        return t\r\n                    }))\r\n                }\r\n            }, 1000)\r\n        } else if (!timerOn) {\r\n            if (!props.timer.currentTime) {\r\n                const currentTime = moment().valueOf() - props.timer.timeStart\r\n                props.setTrackers(props.trackers.map(t => {\r\n                    if (props.timer.id == t.id) return { id: t.id, trackName: t.trackName, currentTime }\r\n                    return t\r\n                }))\r\n                clearInterval(interval)\r\n            } else if (props.timer.currentTime) {\r\n                setTime(props.timer.currentTime)\r\n            }\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [timerOn])\r\n\r\n    return (\r\n        <>\r\n            <div className={style.timeBlock} >\r\n                {\r\n                    props.timer.trackName ?\r\n                        <span className={cn({ [style.active]: isActive })}>{props.timer.trackName}</span> :\r\n                        <span className={cn({ [style.active]: isActive })}>NoName # {props.timer.id}  </span>\r\n                }\r\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n                    <span style={{ marginLeft: '10px' }}>{(\"0\" + (Math.floor(time / 3600000))).slice(-2)}</span>\r\n                    <span>:{(\"0\" + (Math.floor((time / 60000) % 60))).slice(-2)}</span>\r\n                    <span>:{(\"0\" + (Math.floor((time / 1000) % 60))).slice(-2)}</span>\r\n                    {timerOn &&\r\n                        <button className={style.btn} onClick={() => { setTimerOn(false) }}>\r\n                            <img src={pause} className={style.imgPause} />\r\n                        </button>\r\n                    }\r\n                    {!timerOn &&\r\n                        <button className={style.btn} onClick={() => { setTimerOn(true) }}>\r\n                            <img src={play} className={style.imgPause} />\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Timer","const SET_NAME = \"SET_NAME\";\r\nconst GET_TRACKERS = \"GET_TRACKERS\";\r\n\r\nlet initialState = {\r\n    name: '',\r\n    trackers: [{\r\n        currentTime: 104897,\r\n        startAt: 1615826623738,\r\n        trackName: \"\"\r\n    }, {\r\n        startAt: 1615826623738,\r\n        timeStart: 1615828083523,\r\n        trackName: \"\"\r\n    }]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NAME: return {\r\n            ...state,\r\n            ...action.payload,\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setName = (name) => ({\r\n    type: SET_NAME,\r\n    payload: { name }\r\n})\r\n\r\n\r\nexport default reducer","export default __webpack_public_path__ + \"static/media/remove.173f30af.svg\";","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport style from './App.module.css'\r\nimport Timer from './Timer'\r\nimport play from '../assets/img/play.svg'\r\nimport { connect } from 'react-redux'\r\nimport { setName } from '../redux/reducer'\r\nimport remove from '../assets/img/remove.svg'\r\n\r\nconst App = (props) => {\r\n    const [trackers, setTrackers] = useState([])\r\n    const input = (e) => props.setName(e.target.value.toString())\r\n\r\n    const presEnter = (e) => { if (e.code === 'Enter') start() }\r\n\r\n    const start = () => {\r\n        setTrackers([{\r\n            id: moment().valueOf().toString(),\r\n            trackName: props.name,\r\n            timeStart: moment().valueOf(),\r\n        }, ...trackers])\r\n        props.setName('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTrackers(JSON.parse(localStorage.getItem('trackers')))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('trackers', JSON.stringify(trackers))\r\n        document.addEventListener('keydown', presEnter)\r\n        return () => {\r\n            document.removeEventListener('keydown', presEnter)\r\n        }\r\n    }, [trackers])\r\n\r\n    const removeTimer = (e) => {\r\n        setTrackers(trackers.filter(track => {\r\n            if (track.id !== e.target.id) return true\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className={style.divPlay}>\r\n                <input value={props.name} onInput={input} type=\"text\" className={style.inputPlay} placeholder='Enter tracker name' />\r\n                <button onClick={start} className={style.btnPlay}>\r\n                    <img src={play} className={style.imgPlay} />\r\n                </button>\r\n            </div>\r\n            {trackers.length > 0 && trackers.map(p => {\r\n                return (\r\n                    <>\r\n                        <hr />\r\n                        <div className={style.timerGrup} >\r\n                            <Timer key={p.id} timer={p} setTrackers={setTrackers} trackers={trackers} />\r\n                            <button className={style.btn} onClick={removeTimer} id={p.id}>\r\n                                <img src={remove} className={style.imgRemove} id={p.id} />\r\n                            </button>\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    name: state.reducer.name\r\n})\r\nexport default connect(mapStateToProps, { setName })(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['reducer']\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    reducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport const persistor = persistStore(store)\r\nwindow.store = store\r\n\r\n\r\nexport default { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <div className='container' >\n          <h1>Tracker</h1>\n          <App />\n        </div>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgRemove\":\"App_imgRemove__1l5Or\",\"btn\":\"App_btn__15jSa\",\"timerGrup\":\"App_timerGrup__2w2d8\",\"imgPlay\":\"App_imgPlay__3B4Uq\",\"btnPlay\":\"App_btnPlay__2y790\",\"inputPlay\":\"App_inputPlay__1pmVE\",\"divPlay\":\"App_divPlay__1jlVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgPause\":\"Timer_imgPause__1R10h\",\"btn\":\"Timer_btn__1YOaa\",\"timeBlock\":\"Timer_timeBlock__11nUG\",\"active\":\"Timer_active__3YQkn\"};"],"sourceRoot":""}